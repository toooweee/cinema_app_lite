import React from "react";
import { useAuth } from "../../hooks/useAuth.js";
import "./RoleGuard.css";

const RoleGuard = ({ children, allowedRoles = [] }) => {
  const { user, isAuthenticated } = useAuth();

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (!isAuthenticated) {
    return (
      <div className="role-guard-error">
        <div className="error-icon">üîí</div>
        <h2>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h2>
        <p>–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</p>
      </div>
    );
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
  let userRole = null;

  if (user?.client?.role) {
    userRole = user.client.role.name;
  } else if (user?.employee?.role) {
    userRole = user.employee.role.name;
  }

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  console.log("RoleGuard Debug:", {
    user,
    userRole,
    allowedRoles,
    hasClient: !!user?.client,
    hasEmployee: !!user?.employee,
    clientRole: user?.client?.role?.name,
    employeeRole: user?.employee?.role?.name,
  });

  // –ï—Å–ª–∏ —Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
  if (!userRole) {
    return (
      <div className="role-guard-error">
        <div className="error-icon">‚ö†Ô∏è</div>
        <h2>–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞</h2>
        <p>–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</p>
        <div className="debug-info">
          <p>
            <strong>–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</strong>
          </p>
          <p>Email: {user?.email}</p>
          <p>–ï—Å—Ç—å client: {user?.client ? "–î–∞" : "–ù–µ—Ç"}</p>
          <p>–ï—Å—Ç—å employee: {user?.employee ? "–î–∞" : "–ù–µ—Ç"}</p>
          <p>Client role: {user?.client?.role?.name || "–ù–µ –Ω–∞–π–¥–µ–Ω–∞"}</p>
          <p>Employee role: {user?.employee?.role?.name || "–ù–µ –Ω–∞–π–¥–µ–Ω–∞"}</p>
        </div>
      </div>
    );
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è —Ä–æ–ª—å
  const hasAccess =
    allowedRoles.length === 0 || allowedRoles.includes(userRole);

  if (!hasAccess) {
    return (
      <div className="role-guard-error">
        <div className="error-icon">üö´</div>
        <h2>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h2>
        <p>
          –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ. –¢—Ä–µ–±—É–µ–º—ã–µ —Ä–æ–ª–∏:{" "}
          {allowedRoles.join(", ")}
        </p>
        <p>–í–∞—à–∞ —Ä–æ–ª—å: {userRole}</p>
      </div>
    );
  }

  return children;
};

export default RoleGuard;
